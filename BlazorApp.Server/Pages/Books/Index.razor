@page "/books"

@attribute [Authorize]
@inject IBookService _service
@inject NavigationManager _navigationManager
@inject IJSRuntime _js

<h3>Index</h3>

@if (_response == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    @if (!_response.Success)
    {
        <p class="text-danger">@_response.Message</p>
    }
    else
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Title</th>
                    <th scope="col">Price</th>
                    <th scope="col">Summary</th>
                    <th scope="col">Isbn</th>
                    <th scope="col">Year</th>
                    <th scope="col">Author</th>
                    <th scope="col">Image</th>
                    <th scope="col" style="width: 151px" class="text-center">
                        <AuthorizeView Roles=@Roles.Admins>
                            <Authorized>
                                <a class="btn btn-primary" href="/book/create" title="Create">
                                    <span class="oi oi-plus" aria-hidden="true"></span>
                                </a>

                            </Authorized>
                        </AuthorizeView>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _response.Data!.OrderByDescending(x => x.Id))
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Title</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>@item.Summary</td>
                        <td>@item.Isbn</td>
                        <td>@item.Year</td>
                        <td>@item.AuthorName</td>
                        <td><img src="@item.Image" width="100" alt="@item.Title" /></td>
                        <td>
                            <a class="btn btn-info" href="/book/@item.Id" title="Details">
                                <span class="oi oi-eye" aria-hidden="true"></span>
                            </a>

                            <AuthorizeView Roles=@Roles.Admins>
                                <Authorized>
                                    <a class="btn btn-warning" href="/book/edit/@item.Id" title="Edit">
                                        <span class="oi oi-pencil" aria-hidden="true"></span>
                                    </a>
                                    <button class="btn btn-danger" @onclick="@(async ()=> await delete(item.Id))" title="Delete">
                                        <span class="oi oi-trash" aria-hidden="true"></span>
                                    </button>

                                </Authorized>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private Response<List<BookDto>>? _response = null;

    protected override async Task OnInitializedAsync()
    {
        _response = await _service.Get();
    }

    private async Task delete(int id)
    {
        if (await _js.InvokeAsync<bool>("confirm", "Are you sure you want to delete this item?"))
        {
            var response = await _service.Delete(id);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
}
